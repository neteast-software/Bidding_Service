package ${packageName}.service.impl;

import java.util.List;
#foreach ($column in $columns)
#if($column.javaField == 'createTime' || $column.javaField == 'updateTime')
#break
#end
#end
import javax.annotation.Resource;
import org.springframework.stereotype.Service;
#if($table.sub)
import java.util.ArrayList;
import com.gwise.common.core.utils.StringUtils;
import org.springframework.transaction.annotation.Transactional;
import ${packageName}.domain.${subClassName};
#end
import ${packageName}.mapper.${ClassName}Mapper;
import ${packageName}.domain.${ClassName};
import ${packageName}.service.I${ClassName}Service;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;

/**
 * ${functionName}Service业务层处理
 * 
 * @author ${author}
 * @date ${datetime}
 */
@Service
public class ${ClassName}ServiceImpl extends ServiceImpl<${ClassName}Mapper, ${ClassName}> implements I${ClassName}Service
{
    @Resource
    private ${ClassName}Mapper ${className}Mapper;

    /**
     * 查询${functionName}列表
     *
     * @param ${className} ${functionName}
     * @return ${functionName}
     */
    @Override
    public List<${ClassName}> select${ClassName}List(${ClassName} ${className})
    {
        return ${className}Mapper.select${ClassName}List(${className});
    }

    @Override
    public List<${ClassName}> getLambdaList(${ClassName} ${className})
    {
        return this.lambdaQuery().list();
    }

    @Override
    public ${ClassName} getLambdaOne(${pkColumn.javaType} ${pkColumn.javaField})
    {
        return this.getById(${pkColumn.javaField});
    }

}
